// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/message.proto

package message

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2c716e67c403b1b, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type GetMessageResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMessageResponse) Reset()         { *m = GetMessageResponse{} }
func (m *GetMessageResponse) String() string { return proto.CompactTextString(m) }
func (*GetMessageResponse) ProtoMessage()    {}
func (*GetMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2c716e67c403b1b, []int{1}
}

func (m *GetMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMessageResponse.Unmarshal(m, b)
}
func (m *GetMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMessageResponse.Marshal(b, m, deterministic)
}
func (m *GetMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMessageResponse.Merge(m, src)
}
func (m *GetMessageResponse) XXX_Size() int {
	return xxx_messageInfo_GetMessageResponse.Size(m)
}
func (m *GetMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMessageResponse proto.InternalMessageInfo

func (m *GetMessageResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*GetMessageResponse)(nil), "GetMessageResponse")
}

func init() { proto.RegisterFile("protos/message.proto", fileDescriptor_c2c716e67c403b1b) }

var fileDescriptor_c2c716e67c403b1b = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0x2f, 0xd6, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x03, 0x73, 0xa5, 0x64, 0xd2,
	0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0x13, 0x0b, 0x32, 0xf5, 0x13, 0xf3, 0xf2, 0xf2, 0x4b, 0x12,
	0x4b, 0x32, 0xf3, 0xf3, 0x8a, 0x21, 0xb2, 0x4a, 0xec, 0x5c, 0xac, 0xae, 0xb9, 0x05, 0x25, 0x95,
	0x4a, 0x7a, 0x5c, 0x42, 0xee, 0xa9, 0x25, 0xbe, 0x10, 0xad, 0x41, 0xa9, 0xc5, 0x05, 0xf9, 0x79,
	0xc5, 0xa9, 0x42, 0x12, 0x5c, 0xec, 0x50, 0xd3, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x60,
	0x5c, 0xa3, 0x40, 0x2e, 0xe1, 0x80, 0xd2, 0xa4, 0x9c, 0xcc, 0x64, 0xc7, 0xe4, 0xe4, 0xd4, 0xe2,
	0xe2, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0x21, 0x2b, 0x2e, 0x2e, 0x84, 0x31, 0x42, 0x6c,
	0x7a, 0x60, 0xc3, 0xa5, 0x84, 0xf5, 0x30, 0xcd, 0x56, 0xe2, 0x6f, 0xba, 0xfc, 0x64, 0x32, 0x13,
	0xa7, 0x10, 0xbb, 0x7e, 0x01, 0xd8, 0x20, 0xa3, 0x60, 0x2e, 0x91, 0xe0, 0xd4, 0xe4, 0xd2, 0xa2,
	0xd4, 0x14, 0x54, 0x33, 0xad, 0x89, 0x37, 0x53, 0x00, 0x6c, 0x26, 0x97, 0x10, 0x87, 0x7e, 0x31,
	0xc4, 0xa4, 0x24, 0x36, 0xb0, 0x3f, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd4, 0x0d, 0x4d,
	0x0a, 0x1d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PublicAccessServiceClient is the client API for PublicAccessService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PublicAccessServiceClient interface {
	GetMessage(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetMessageResponse, error)
}

type publicAccessServiceClient struct {
	cc *grpc.ClientConn
}

func NewPublicAccessServiceClient(cc *grpc.ClientConn) PublicAccessServiceClient {
	return &publicAccessServiceClient{cc}
}

func (c *publicAccessServiceClient) GetMessage(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetMessageResponse, error) {
	out := new(GetMessageResponse)
	err := c.cc.Invoke(ctx, "/PublicAccessService/GetMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PublicAccessServiceServer is the server API for PublicAccessService service.
type PublicAccessServiceServer interface {
	GetMessage(context.Context, *Empty) (*GetMessageResponse, error)
}

// UnimplementedPublicAccessServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPublicAccessServiceServer struct {
}

func (*UnimplementedPublicAccessServiceServer) GetMessage(ctx context.Context, req *Empty) (*GetMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMessage not implemented")
}

func RegisterPublicAccessServiceServer(s *grpc.Server, srv PublicAccessServiceServer) {
	s.RegisterService(&_PublicAccessService_serviceDesc, srv)
}

func _PublicAccessService_GetMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicAccessServiceServer).GetMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PublicAccessService/GetMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicAccessServiceServer).GetMessage(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _PublicAccessService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "PublicAccessService",
	HandlerType: (*PublicAccessServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMessage",
			Handler:    _PublicAccessService_GetMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/message.proto",
}

// SecuredAccessServiceClient is the client API for SecuredAccessService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SecuredAccessServiceClient interface {
	GetMessage(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetMessageResponse, error)
}

type securedAccessServiceClient struct {
	cc *grpc.ClientConn
}

func NewSecuredAccessServiceClient(cc *grpc.ClientConn) SecuredAccessServiceClient {
	return &securedAccessServiceClient{cc}
}

func (c *securedAccessServiceClient) GetMessage(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetMessageResponse, error) {
	out := new(GetMessageResponse)
	err := c.cc.Invoke(ctx, "/SecuredAccessService/GetMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SecuredAccessServiceServer is the server API for SecuredAccessService service.
type SecuredAccessServiceServer interface {
	GetMessage(context.Context, *Empty) (*GetMessageResponse, error)
}

// UnimplementedSecuredAccessServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSecuredAccessServiceServer struct {
}

func (*UnimplementedSecuredAccessServiceServer) GetMessage(ctx context.Context, req *Empty) (*GetMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMessage not implemented")
}

func RegisterSecuredAccessServiceServer(s *grpc.Server, srv SecuredAccessServiceServer) {
	s.RegisterService(&_SecuredAccessService_serviceDesc, srv)
}

func _SecuredAccessService_GetMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecuredAccessServiceServer).GetMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SecuredAccessService/GetMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecuredAccessServiceServer).GetMessage(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _SecuredAccessService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "SecuredAccessService",
	HandlerType: (*SecuredAccessServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMessage",
			Handler:    _SecuredAccessService_GetMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/message.proto",
}
